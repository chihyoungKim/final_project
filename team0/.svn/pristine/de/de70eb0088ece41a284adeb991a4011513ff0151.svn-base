<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.inadang.mapper.StoreMapper">
	<select id="selectAll" resultType="store">
		SELECT CATEGORY, ADDRESS, TEL, STARTTIME, ENDTIME, ORIGININFO, MINPRICE,
		DELTIME, ROUND(SCOPE, 1) SCOPE, REVIEWNUM, LIKES, BNO, SNO, NOTICE,
		DELPRICE, NAME, AD, REPLYNUM, X, Y FROM TBL_STORE
	</select>
	
	<select id="selectAd" resultType="store">
		SELECT CATEGORY, ADDRESS, TEL, STARTTIME, ENDTIME, ORIGININFO, MINPRICE,
		DELTIME, ROUND(SCOPE, 1) SCOPE, REVIEWNUM, LIKES, BNO, SNO, NOTICE,
		DELPRICE, NAME, AD, REPLYNUM, X, Y FROM TBL_STORE WHERE AD > SYSDATE
		<if test="category != 0">
			AND CATEGORY = #{category}
		</if>
	</select>
	
	<select id="selectLogo" resultType="storeAttach">
		SELECT * FROM TBL_STORE_ATTACH WHERE SNO = #{sno}
	</select>
	
	<select id="selectAllBySearch" resultType="store">
		SELECT B.* FROM(
		SELECT ROWNUM RN, A.* FROM (
		    SELECT CATEGORY, ADDRESS, TEL, STARTTIME, ENDTIME, ORIGININFO, MINPRICE,
			DELTIME, ROUND(SCOPE, 1) SCOPE, REVIEWNUM, LIKES, BNO, SNO, NOTICE,
			DELPRICE, NAME, AD, REPLYNUM, X, Y FROM TBL_STORE
		    WHERE CATEGORY = #{category}
		    AND LOWER(NAME) LIKE LOWER('%' || #{search} || '%')
		    OR SNO IN (SELECT SNO FROM TBL_MENU WHERE SNO IN(SELECT SNO FROM TBL_STORE WHERE CATEGORY = #{category})
		AND LOWER(NAME) LIKE LOWER('%' || #{search} || '%') GROUP BY SNO)
		) A) B
		WHERE RN > #{cri.lastNo}
		AND ROWNUM &lt;= #{cri.amount}
	</select>
	
	<select id="selectAllByCategory" resultType="store">
		SELECT RN, B.* FROM(
		SELECT ROWNUM RN, A.* FROM (
		SELECT CATEGORY, ADDRESS, TEL, STARTTIME, ENDTIME, ORIGININFO, MINPRICE,
		DELTIME, ROUND(SCOPE, 1) SCOPE, REVIEWNUM, LIKES, BNO, SNO, NOTICE,
		DELPRICE, NAME, AD, REPLYNUM, X, Y FROM TBL_STORE
		<if test="category != 0">
			WHERE CATEGORY = #{category}
		</if>
		
		<if test="condition == 'R'.toString()">
			ORDER BY REVIEWNUM DESC
		</if>
		<if test="condition == 'S'.toString()">
			ORDER BY SCOPE DESC
		</if>
		<if test="condition == 'D'.toString()">
			ORDER BY DELTIME
		</if>
		<if test="condition == 'M'.toString()">
			ORDER BY MINPRICE
		</if>
		) A) B
		WHERE RN > #{cri.lastNo}
		AND ROWNUM &lt;= #{cri.amount}
	</select>
  
  	<select id="findLike" resultType="boolean">
  		SELECT CASE WHEN COUNT(*) >= 1 THEN 1 ELSE 0 END FROM TBL_LIKES WHERE ID = #{id} AND SNO = #{sno}
  	</select>
  	
  	<insert id="insertLike">
  		INSERT INTO TBL_LIKES VALUES(#{id}, #{sno})
  	</insert>
  	
  	<delete id="deleteLike">
  		DELETE TBL_LIKES WHERE ID = #{id} AND SNO = #{sno}
  	</delete>
  	
  	<select id="selectLike" resultType="long">
  		SELECT SNO FROM TBL_LIKES WHERE ID = #{id}
  	</select>

  	<select id="select" resultType="store">
  		SELECT CATEGORY, ADDRESS, TEL, STARTTIME, ENDTIME, ORIGININFO, MINPRICE,
		DELTIME, ROUND(SCOPE, 1) SCOPE, REVIEWNUM, LIKES, BNO, SNO, NOTICE,
		DELPRICE, NAME, AD, REPLYNUM, X, Y FROM TBL_STORE WHERE SNO = #{sno}
  	</select>
  	
  	<insert id="insertSelectKey">
		<selectKey keyProperty="sno" order="BEFORE" resultType="long">
			SELECT SEQ_STORE.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TBL_STORE(SNO, CATEGORY, NAME, BNO, ADDRESS, STARTTIME, ENDTIME, NOTICE, ORIGININFO, MINPRICE, DELPRICE, DELTIME)
    	VALUES(#{sno}, #{category}, #{name}, #{bno}, #{address}, #{startTime}, #{endTime}, #{notice}, #{originInfo}, #{minPrice}, #{delPrice}, #{delTime})
	</insert>
	
	<select id="read" resultType="store">
		SELECT CATEGORY, ADDRESS, TEL, STARTTIME, ENDTIME, ORIGININFO, MINPRICE,
		DELTIME, ROUND(SCOPE, 1) SCOPE, REVIEWNUM, LIKES, BNO, SNO, NOTICE,
		DELPRICE, NAME, AD, REPLYNUM, X, Y FROM TBL_STORE WHERE SNO = #{sno}
	</select>
	
	<update id="update">
		UPDATE TBL_STORE SET
			CATEGORY = #{store.category}, 
			NAME = #{store.name},
			BNO = #{store.bno}, 
			ADDRESS = #{store.address},
			STARTTIME = #{store.startTime},
			ENDTIME = #{store.endTime}, 
			NOTICE = #{store.notice},
			ORIGININFO = #{store.originInfo}, 
			MINPRICE = #{store.minPrice}, 
			DELPRICE = #{store.delPrice}, 
			DELTIME = #{store.delTime}
		WHERE SNO = (SELECT SNO FROM TBL_MEMBER WHERE ID = #{id})
	</update>
	
	<update id="increaseReviewNum">
		UPDATE TBL_STORE SET
		REVIEWNUM = (SELECT COUNT(*) FROM TBL_REVIEWS WHERE SNO = #{sno} AND RNO = GROUPID)
		WHERE SNO = #{sno}
	</update>
	
	<update id="updateScope">
		UPDATE TBL_STORE SET
		SCOPE = (SCOPE * REVIEWNUM + #{scope}) / (REVIEWNUM + 1)
		WHERE SNO = #{sno}
	</update>
	
	<delete id="removeStore">
		DELETE FROM TBL_STORE WHERE SNO = #{sno}
	</delete>	
  </mapper>